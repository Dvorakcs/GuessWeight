@page "/Auth"
@inject IAuthServices authServices
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager
<h3>Auth</h3>
<div class="input-group flex-nowrap w-50 align-middle align-content-center">
  <span class="input-group-text" id="addon-wrapping"></span>
    <input type="text" class="form-control" @bind="Email" placeholder="Email" aria-label="Email" aria-describedby="addon-wrapping">
    <input type="text" class="form-control" @bind="Senha" placeholder="Senha" aria-label="Senha" aria-describedby="addon-wrapping">
</div>
<button @onclick="Login">Login</button>
@code {
    private string Email;
    private string Senha;
    public async Task Login()
    {
        if (Email is not null && Senha is not null)
        {
            var loginComplete = await authServices.Login(new LoginUsuarioDto
                {
                    Email = Email,
                    Senha = Senha
                });

            await SalvarTokenNoLocalStorage(loginComplete.ApiKey, loginComplete.Id.Value);
            navigationManager.NavigateTo("/",true);
        }
    }

    public async Task SalvarTokenNoLocalStorage(string token, int usuarioId)
    {
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "jwtToken", token);
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "UsuarioId", usuarioId);
    }

    
}
